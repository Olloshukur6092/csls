/* BLACK BACKGROUND AROUND BANNER  */
function isOnCenter(elem) {
    let rect = elem.getBoundingClientRect();
    if (rect.top > window.innerHeight * .15 && rect.bottom < window.innerHeight * .85) {
        return true;
    } else {
        return false
    }
}

function showOrHideOnScroll(elem) {
    if (isOnCenter(elem))
        elem.style.boxShadow = '0 0 0 2000px rgba(0,0,0,0.8)';
    else
        elem.style.boxShadow = 'none';
}

function fadeToBlack(divId) {
    let myDiv = document.getElementById(divId);
    let child = myDiv.firstElementChild;
    child.style.position = 'relative';
    child.style.transition = 'ease 1s all';
    window.addEventListener('scroll', function () {
        showOrHideOnScroll(child);
    });
    child.onmouseenter = function () {
        this.style.boxShadow = '0 0 0 2000px rgba(0,0,0,0.8)'
    }
    child.onmouseleave = function () {
        this.style.boxShadow = 'none'
    }
}

/* END BLACK BACKGROUND AROUND BANNER  */

function addStyle() {
    var doc = document;
    var newScript = doc.createElement('style');
    var content = doc.createTextNode('#native_network_interscroller{width: 100vw!important; margin-left: calc((100vw - 100%) / -2)!important; max-height: 105vh !important; display: block !important;}.intext_adf,.inpage_adf { display: block !important; position: relative !important; width: 100% !important; max-height: 600px !important; padding: 0 !important; box-sizing: content-box !important;} .intext_adf { text-align:center; margin: 0; margin-bottom: 20px;margin-top: 16px; margin-left:auto!important;margin-right:auto!important; } .intext_adf>a{ display: inline-block; position: relative;} .intext_adf>div,.inpage_adf>div {position: relative; margin:auto;} .intext_adf>div:focus { position:relative; box-shadow:0 0 0 2000px rgba(0,0,0,0.65);}	.intext_adf > * > a.native_network, .inpage_adf * a.native_network {text-align: center;height: 20px;line-height: 17px;font-size:17px;margin: 0;width: 145px;position: absolute;bottom: -20px;right: 0px;overflow: hidden;z-index: 99;display: block;    display: flex;align-items: center;box-sizing: border-box;border-radius: 6px 6px 0 6px;color: #FFF;text-decoration: none; } .intext_adf > * > a.native_network.top_left {top:0;bottom:auto;left:0;right:auto} .intext_adf > * > a.native_network.top_right {top:0;bottom:auto;left:auto;right:0;} #caramel_svg_logo{ width: 15px !important; height: 15px !important; right: 130px; position: absolute; }  #caramel_svg_text{ position:absolute; right: 0; }   .intext_adf > * > a.native_network.bottom_left {top:auto;bottom:0;left:0;right:auto} .intext_adf > * > a.native_network.bottom_right {top:auto;bottom:0;left:auto;right:0} 	.intext_adf > * > a.native_network:hover, .inpage_adf * a.native_network:hover {	width: 145px;	}	.intext_adf > * > a.native_network > img, .inpage_adf * a.native_network > img { max-height: 18px !important; height: 18px !important; width: 125px !important; max-width: 125px !important;display: inline-block; cursor: pointer; filter: none;margin: 0 !important;padding: 0 !important;} div[data-nologo="true"] a.native_network {display:block; ann} .interactive a.native_network{bottom:40px}.interscroller{width: 100vw!important;margin-left: calc((100vw - 100%) / -2)!important;} .native_network_top{ right: 0; top: -18px ; width: 300px ; height: 18px ;position: absolute; margin-top: 0px ; display: flex; } .caramel_logo_animation{ -webkit-animation-duration: 1s; -moz-animation-duration: 1s; -o-animation-duration: 1s; animation-duration: 1s; -webkit-animation-iteration-count: 1; -moz-animation-iteration-count: 1; -o-animation-iteration-count: 1; animation-iteration-count: 1; -webkit-animation-timing-function:ease-in-out; -moz-animation-timing-function:ease-in-out; -o-animation-timing-function:ease-in-out; animation-timing-function:ease-in-out; }  #caramel_svg_text{ animation-name: caramel_svg_text; width:125px; height:18px; } .native_network_box{ width: 100%; height: 100%; display: flex; align-items: center; position: absolute; right: 0px; animation-name: native_network_box; } @keyframes native_network_box{ 0%{right: -145px;} 100%{right: 0px;} }   .over { animation-name: rotate1; animation-duration: 1.5s; animation-iteration-count: infinite; animation-timing-function: linear; } @keyframes rotate1 { from {transform: rotate(0deg);} to {transform: rotate(360deg);} } .out { animation-name: rotate2; animation-duration: 1.5s; animation-iteration-count: 1; animation-timing-function: ease-out; } @keyframes rotate2 { from {transform: rotate(0deg);} to {transform: rotate(360deg);} }');
    newScript.appendChild(content);
    var bodyClass = doc.getElementsByTagName('head')[0];
    bodyClass.appendChild(newScript);
}
addStyle();

function addCustomStyle(styletext) {
    var doc = document;
    var newScript = doc.createElement('style');
    var content = doc.createTextNode(styletext);
    newScript.appendChild(content);
    var bodyClass = doc.getElementsByTagName('head')[0];
    bodyClass.appendChild(newScript);
}

function addCredits(divId, place) {
    let thisDiv = document.getElementById(divId);
    var crDiv = document.createElement("a");
    var crDivTop = document.createElement("a");
    if (place) {
        crDiv.className = 'native_network ' + place;
        crDivTop.className = 'native_network_top ' + place;
    } else {
        crDiv.className = 'native_network';
        crDivTop.className = 'native_network_top ' + place;
    }
    crDiv.href = 'https://nativenetwork.uz/';
    crDiv.target = '_blank';
    crDiv.innerHTML = '<div class="native_network_box caramel_logo_animation" id="native_network_box"> <img src="https://ads.nativenetwork.uz/new_logo_svg/logo.svg" id="caramel_svg_text" > <img src="https://ads.nativenetwork.uz/new_logo_svg/caramel.svg" id="caramel_svg_logo" class="" > </div>';
    thisDiv.firstChild.appendChild(crDiv);




    crDivTop.href = 'https://nativenetwork.uz/';
    crDivTop.target = '_blank';
    crDivTop.innerHTML = '<img src="https://ads.nativenetwork.uz/new_logo_svg/advertising.svg" id="caramel_svg_advertising">';
    thisDiv.firstChild.appendChild(crDivTop);




    // crDiv.onmouseover = function(event) {
    //     document.getElementById("caramel_svg_logo").style.className = "caramel_logo_animation";
    //     document.getElementById("caramel_svg_logo").style.transition = "7.5s ease";
    //     document.getElementById("caramel_svg_logo").style.transform = "rotate(1800deg)";
    // };
    // crDiv.onmouseout = function(event) {
    //     document.getElementById("caramel_svg_logo").style.className = "caramel_logo_animation";
    //     document.getElementById("caramel_svg_logo").style.transition = "0";
    //     document.getElementById("caramel_svg_logo").style.transform = "rotate(360deg)";
    // };

    var rotate = document.getElementById("native_network_box");
    var caramel_logo_svg = document.getElementById('caramel_svg_logo');


    rotate.addEventListener('mouseover', function () {

        caramel_logo_svg.className = 'over';


    }, false);

    rotate.addEventListener('mouseout', function () {

        var rotate = caramel_logo_svg;

        rotate.className = 'out';



    }, false);





}

function addVideoCredits(divId) {
    let thisDiv = document.getElementById(divId);
    thisDiv.style.margin = '10px 0';
    var crDiv = document.createElement("a");
    crDiv.className = 'native_network';
    crDiv.href = 'https://caramel.am';
    crDiv.target = '_blank';
    crDiv.innerHTML = '<img src="https://ads.prodigi.uz/logo-new.png">';
    thisDiv.shadowRoot.firstElementChild.firstElementChild.firstElementChild.appendChild(crDiv);

    // var newScript = document.createElement('style');
    // var content = document.createTextNode('a.native_network {	display: block;text-align: center; height: 0px;line-height: 17px;margin: 0;	width: 140px;position: absolute;top: 0!important;left: auto!important;right:0!important;overflow: hidden;z-index: 99;padding: 7px 7px;box-sizing: border-box;border-radius: 6px 0px 0 6px;color: #FFF;text-decoration: none; transition: ease .3s all; text-align: left; } a.native_network:hover {	width: 140px;padding: 7px 7px;	}	a.native_network > img { max-height: 18px !important; height: 18px !important; width: 125px !important; max-width: 125px !important;display: inline-block; vertical-align: middle; } div[data-nologo="true"] a.native_network {display:block;}');
    // newScript.appendChild(content);
    // thisDiv.shadowRoot.firstElementChild.appendChild(newScript);

}

function hideDiv(divId) {
    document.getElementById(divId).style.display = 'none';
}

function showLogo(divId) {
    document.querySelectorAll('#' + divId + ' .native_network').style.display = 'block';
}

function adCrt(isScroll, noCredit, ownerid, divId, pmeters) {
    /* creates adfox code */
    function afterRender(data) {
        // if (document.getElementById(divId).classList.contains("--nologo")) {
        //     console.log("aaa")
        // }
        if (!noCredit) {


            if (!document.getElementById(divId).style.getPropertyValue('--nologo')) {

                var position = document.getElementById(divId).style.getPropertyValue('--position').trim();

                if (position == 'top_left') {

                    addCredits(divId, 'top_left');

                } else if (position == 'top_right') {

                    addCredits(divId, 'top_right');

                } else if (position == 'bottom_left') {

                    addCredits(divId, 'bottom_left');

                } else if (position == 'bottom_right') {

                    addCredits(divId, 'bottom_right');

                } else {

                    addCredits(divId);

                }

            }



            setTimeout(function () {
                if (document.getElementById(divId)) {
                    var rtbBlock = document.getElementById(divId).firstChild;
                    if (rtbBlock.id.indexOf('yandex_rtb') != -1) {
                        var newLogoScript = "#" + divId + " .native_network_box {display: none;}" + "#" + divId + " .native_network_top  {display:none;}}",
                            head = document.head || document.getElementsByTagName('head')[0],
                            style = document.createElement('style');
                        head.appendChild(style);
                        style.type = 'text/css';
                        if (style.styleSheet) {
                            style.styleSheet.cssText = newLogoScript;
                        }
                        else {
                            style.appendChild(document.createTextNode(newLogoScript));
                            console.log("nologo")
                        }
                    }
                }


                if (document.getElementById(divId).classList.contains("--nologo")) {

                    var newLogoScript = "#" + divId + " .native_network_box {display: none;}" + "#" + divId + " .native_network_top  {display:none;}}",
                        head = document.head || document.getElementsByTagName('head')[0],
                        style = document.createElement('style');
                    head.appendChild(style);
                    style.type = 'text/css';
                    if (style.styleSheet) {
                        style.styleSheet.cssText = newLogoScript;
                    }
                    else {
                        style.appendChild(document.createTextNode(newLogoScript));
                        console.log("nologo")
                    }
                }
            }, 1);

        }
        if (document.getElementById(divId).style.getPropertyValue('--toblack')) {
            fadeToBlack(divId);
        }
    }
    /* Adfox Code Start */
    if (isScroll) { // IGNORE!!! this case is old, it will never be true, only ELSE part will work
        window.Ya.adfoxCode.createScroll({
            ownerId: ownerid,
            containerId: divId,
            params: pmeters,
            onLoad: function (data) { },
            onRender: afterRender,
            onStub: function (data) {
                hideDiv(divId);
            },
            onError: function (data) { }
        });
    } else {
        window.Ya.adfoxCode.create({
            ownerId: ownerid,
            containerId: divId,
            params: pmeters,
            onLoad: function (data) { },
            onRender: afterRender,
            onStub: function (data) {
                hideDiv(divId);
            },
            onError: function (data) { }

        });
    }
    /* Adfox Code End */
}

function addInteractiveButton(divId) {

    console.log(divId);

    var checked = 0;

    var _interval = setInterval(function () {

        checked++;

        if (document.getElementById(divId) && document.getElementById(divId).style.getPropertyValue('--interactive')) {

            var interactive_version = document.getElementById(divId).style.getPropertyValue('--interactive').trim();

            var iframe = document.querySelector('#' + divId + ' iframe');

            var link_anchor = iframe.contentWindow.document.querySelector("a[href*='goLink']");

            var event_anchor = iframe.contentWindow.document.querySelector("a[href*='event']");

            // if(interactive_version == 'himnadram'){

            // 	var el = document.querySelector('#'+divId + '>' + 'div');

            // 	console.log(divId);

            // 	var height = el.offsetHeight;

            // 	var newHeight = height + 5 + 25;

            // 	el.style.height = newHeight + 'px';

            // 	var interactive_button = document.createElement('div');

            // 	interactive_button.classList.add('caramel-himnadram');

            // 	interactive_button.insertAdjacentHTML('beforeend','<div class="caramel-himnadram"><img src="https://nativenetwork.uz/interactive/himnadram4.png"></div>');

            // 	el.appendChild(interactive_button);

            // 	document.querySelector('head').innerHTML += '<style>.interactive a.native_network{bottom:30px!important;}.caramel-himnadram{position:absolute;bottom:0;right:0;background-image:none;width:100%;height:25px;outline: 1px solid #ced0d4;}. .caramel-himnadram img{position:absolute;width:100%;height:100%;top:0;left:0}</style>';

            // 	clearInterval(_interval);

            // }

            if (event_anchor) {

                console.log(interactive_version);

                var el = document.querySelector('#' + divId + '>' + 'div');

                var height = el.offsetHeight;

                var newHeight = height + 40;

                el.style.height = newHeight + 'px';

                var interactive_button = document.createElement('div');

                interactive_button.classList.add('caramel-interactive');

                interactive_button.insertAdjacentHTML('beforeend', '<a href="' + event_anchor.href + '" target="_blank"><img src="https://nativenetwork.uz/interactive/' + interactive_version + '.png"><div class="caramel-interactive-arrow-container"><img class="caramel-interactive-arrow caramel-interactive-arrow-1" src="https://nativenetwork.uz/interactive/arrow.png"><img class="caramel-interactive-arrow caramel-interactive-arrow-2" src="https://nativenetwork.uz/interactive/arrow.png"></div></a>');

                interactive_button.onclick = function () {

                    var xmlHttp = new XMLHttpRequest();

                    xmlHttp.open("GET", event_anchor.href, true);

                    xmlHttp.send(null);

                    return xmlHttp.responseText;

                };

                el.appendChild(interactive_button);

                document.querySelector('head').innerHTML += '<style>.caramel-interactive{position:absolute;bottom:0;right:0;background-image:none;background-color:#efefef;box-shadow:rgba(0,0,0,.08) 0 2px 5px 0;border:1px solid #ced0d4;box-sizing:border-box;margin-left:auto;padding:3px 8px}.caramel-interactive>a>img{margin:0;width:auto;height:auto;display:inline-block}.caramel-interactive-arrow-container{display:inline-block;margin-left:6px}.caramel-interactive .caramel-interactive-arrow-1{margin:0;width:auto;height:auto;animation:1.7s linear .3s infinite normal forwards caramel-interactive-button-animation}.caramel-interactive .caramel-interactive-arrow-2{margin:0;width:auto;height:auto;animation:1.7s linear 0s infinite normal forwards caramel-interactive-button-animation}@keyframes caramel-interactive-button-animation{0%{transform:translate3d(0,0,0) scale3d(1,1,1);-webkit-transform:translate3d(0,0,0) scale3d(1,1,1);-moz-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;animation-timing-function:linear;-webkit-animation-timing-function:linear;-moz-animation-timing-function:linear}17.6471%{transform:translate3d(0,0,0) scale3d(1,1,1);-webkit-transform:translate3d(0,0,0) scale3d(1,1,1);-moz-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;animation-timing-function:linear;-webkit-animation-timing-function:linear;-moz-animation-timing-function:linear}41.1765%{transform:translate3d(10px,0,0) scale3d(.9,.9,1);-webkit-transform:translate3d(10px,0,0) scale3d(.9,.9,1);-moz-transform:translate3d(10px,0,0) scale3d(.9,.9,1);opacity:0;animation-timing-function:linear;-webkit-animation-timing-function:linear;-moz-animation-timing-function:linear}64.7059%{transform:translate3d(-10px,0,0) scale3d(.9,.9,1);-webkit-transform:translate3d(-10px,0,0) scale3d(.9,.9,1);-moz-transform:translate3d(-10px,0,0) scale3d(.9,.9,1);opacity:0;animation-timing-function:linear;-webkit-animation-timing-function:linear;-moz-animation-timing-function:linear}88.2353%{transform:translate3d(0,0,0) scale3d(1,1,1);-webkit-transform:translate3d(0,0,0) scale3d(1,1,1);-moz-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;animation-timing-function:linear;-webkit-animation-timing-function:linear;-moz-animation-timing-function:linear}100%{transform:translate3d(0,0,0) scale3d(1,1,1);-webkit-transform:translate3d(0,0,0) scale3d(1,1,1);-moz-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;animation-timing-function:linear;-webkit-animation-timing-function:linear;-moz-animation-timing-function:linear}}@-webkit-keyframes caramel-interactive-button-animation{0%{-webkit-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;-webkit-animation-timing-function:linear}17.6471%{-webkit-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;-webkit-animation-timing-function:linear}41.1765%{-webkit-transform:translate3d(10px,0,0) scale3d(.9,.9,1);opacity:0;-webkit-animation-timing-function:linear}64.7059%{-webkit-transform:translate3d(-10px,0,0) scale3d(.9,.9,1);opacity:0;-webkit-animation-timing-function:linear}88.2353%{-webkit-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;-webkit-animation-timing-function:linear}100%{-webkit-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;-webkit-animation-timing-function:linear}}@-moz-keyframes caramel-interactive-button-animation{0%{-moz-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;-moz-animation-timing-function:linear}17.6471%{-moz-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;-moz-animation-timing-function:linear}41.1765%{-moz-transform:translate3d(10px,0,0) scale3d(.9,.9,1);opacity:0;-moz-animation-timing-function:linear}64.7059%{-moz-transform:translate3d(-10px,0,0) scale3d(.9,.9,1);opacity:0;-moz-animation-timing-function:linear}88.2353%{-moz-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;top:0;left:6px;-moz-animation-timing-function:linear}100%{-moz-transform:translate3d(0,0,0) scale3d(1,1,1);opacity:1;-moz-animation-timing-function:linear}}</style>';

                console.log(document.querySelector('#' + divId + '>' + 'div'));

                clearInterval(_interval);

            }


        }

        if (checked > 100) {
            clearInterval(_interval);
        }

    }, 100);



}

function addInpage(pmtr, noCredit) {

    window.Ya.adfoxCode.create({
        ownerId: 389950,
        containerId: pmtr.renderTo,
        params: {
            p1: pmtr.p1,
            p2: 'hixy'
        }
    });

}

function addNativeScroll(p1, params = null) {

    if (window.innerWidth <= 500) {

        var interscroller = {

            container: document.getElementById('native_network_interscroller'),
            p1: '',
            p2: 'hiya',
            catfish_height: 0,
            topline_height: 0,
            header_height: 0,
            banner_exists: false,
            height: (window.innerHeight * 1.05),
            setHeight: function () {

                if (this.banner_exists) {



                }

            },
            create: function () {

                var that = this;

                window.Ya.adfoxCode.create({
                    ownerId: 389950,
                    containerId: 'native_network_interscroller',
                    onRender: function () {

                        that.banner_exists = true;

                        that.calculate();

                    },
                    params: {
                        p1: that.p1,
                        p2: that.p2
                    }
                });

            },
            calculate: function () {

            },
            init: function (p1, params) {

                this.p1 = p1;

                if (params) {

                    for (var prop in params) {

                        this[prop] = params[prop];
                    }

                }

                this.create();

            }
        }
        if (window.location.href.indexOf('test23') > -1) {

            console.log('from test');

            interscroller.init(p1, params);

        } else {

            console.log('from o');

            window.Ya.adfoxCode.create({
                ownerId: 389950,
                containerId: 'native_network_interscroller',
                params: {
                    p1: p1,
                    p2: 'hiya'
                }
            });

        }
    }

}

function addNewInpage(container, p1) {

    var l = Math.round(document.querySelectorAll(container).length / 2);

    var referenceNode = document.querySelectorAll(container)[l - 1];

    var div = document.createElement('div');

    div.id = 'native_network_inpage';

    referenceNode.parentNode.insertBefore(div, referenceNode.nextSibling);

    window.Ya.adfoxCode.create({
        ownerId: 389950,
        containerId: 'native_network_inpage',
        params: {
            p1: p1,
            p2: 'hixy'
        }
    });

}

function getRandomId() {
    var x = Math.floor(Math.random() * 900000000000 + 100000000000);
    var y = 'native_network' + x;
    return y;
}

function ImplementCode(isScroll, noCredit, ownerid, params, params2, ConElement, number, adfId, adfId2, MinSymbols, MinSymbols2, isInPage, inpageparams, interscroller) {
    var ConElements = document.querySelectorAll(ConElement),
        Cnumbers = ConElements.length,
        CElement, CElement2, newDiv = document.createElement("div"),
        newDiv2 = document.createElement("div");
    newDiv.id = adfId;
    newDiv.className = 'intext_adf';
    newDiv2.id = adfId2, newDiv2.className = 'intext_adf';
    var inDivEl;
    if (isInPage) {
        var inDiv = document.createElement("div");
        inDiv.id = inpageparams.renderTo;
        inDiv.className = 'inpage_adf';
    }
    if (Cnumbers > 1) {
        var textCont = ConElements[number - 1].innerText;
        if (textCont.length >= MinSymbols) {
            CElement = ConElements[number];
            CElement.parentNode.insertBefore(newDiv, CElement);
            adCrt(isScroll, noCredit, ownerid, adfId, params);
            addInteractiveButton(adfId);
            console.log(7);
            if (isInPage) {
                if (ConElements[number + 1]) {

                    inDivEl = ConElements[number + 1];

                    inDivEl.parentNode.insertBefore(inDiv, inDivEl);

                } else {
                    ConElements[0].parentNode.appendChild(inDiv);
                }

                addInpage(inpageparams, noCredit);
            }
            if (interscroller) {

                var interscroller_cont = document.createElement('div');

                interscroller_cont.id = 'native_network_interscroller';

                if (ConElements[number + 1]) {

                    inDivEl = ConElements[number + 1];

                    inDivEl.parentNode.insertBefore(interscroller_cont, inDivEl);

                } else {
                    ConElements[0].parentNode.appendChild(interscroller_cont);
                }

                addNativeScroll(interscroller.p1);

            }
            var textc2 = 0;
            for (i = 1; i < Cnumbers; i++) {
                textc2 += ConElements[i].innerText.length;
                if (textc2 > MinSymbols2) {
                    if (i + 1 < Cnumbers) {
                        CElement2 = ConElements[i + 1];
                        CElement2.parentNode.insertBefore(newDiv2, CElement2);
                    } else {
                        ConElements[0].parentNode.appendChild(newDiv2);
                    }
                    adCrt(isScroll, noCredit, ownerid, adfId2, params2);

                    addInteractiveButton(adfId2);

                    break;
                }
            }
        } else if (Cnumbers > 2) {
            CElement = ConElements[number + 1];
            CElement.parentNode.insertBefore(newDiv, CElement);
            adCrt(isScroll, noCredit, ownerid, adfId, params);
            addInteractiveButton(adfId);
            console.log(8);
            if (isInPage) {

                if (ConElements[number + 2]) {

                    inDivEl = ConElements[number + 2];

                    inDivEl.parentNode.insertBefore(inDiv, inDivEl)
                } else {

                    ConElements[0].parentNode.appendChild(inDiv)

                }

                addInpage(inpageparams, noCredit);
            }
            if (interscroller) {

                var interscroller_cont = document.createElement('div');

                interscroller_cont.id = 'native_network_interscroller';

                if (ConElements[number + 2]) {

                    inDivEl = ConElements[number + 2];

                    inDivEl.parentNode.insertBefore(interscroller_cont, inDivEl);

                } else {
                    ConElements[0].parentNode.appendChild(interscroller_cont);
                }

                addNativeScroll(interscroller.p1);

            }
            var textc2 = 0;
            for (i = 2; i < Cnumbers; i++) {
                textc2 += ConElements[i].innerText.length;
                if (textc2 > MinSymbols2) {
                    if (i + 1 < Cnumbers) {
                        CElement2 = ConElements[i + 1];
                        CElement2.parentNode.insertBefore(newDiv2, CElement2);
                    } else {
                        ConElements[0].parentNode.appendChild(newDiv2);
                    }
                    adCrt(isScroll, noCredit, ownerid, adfId2, params2);
                    addInteractiveButton(adfId);
                    addInteractiveButton(adfId2);
                    console.log(5);
                    break;
                }
            }

        } else {
            ConElements[0].parentNode.appendChild(newDiv);
            adCrt(isScroll, noCredit, ownerid, adfId, params);
            addInteractiveButton(adfId);
            console.log(9);
        }
        return Cnumbers;
    }

    //	else if(Cnumbers>1){CElement=ConElements[Cnumbers-1];CElement.parentNode.insertBefore(newDiv,CElement);adCrt(isScroll,noCredit,ownerid,adfId,params);}
    else if (Cnumbers == 1 && ConElements[0].innerText.length >= MinSymbols) {
        ConElements[0].parentNode.appendChild(newDiv);
        adCrt(isScroll, noCredit, ownerid, adfId, params);
        addInteractiveButton(adfId);
        console.log(10);
    }

}

function ImplementCodeBr(isScroll, noCredit, ownerid, params, params2, ConElement, number, adfId, adfId2, MinSymbols, MinSymbols2, isInPage, inpageparams) {
    var mainDiv = document.querySelectorAll(ConElement)[0];
    var ConElements = mainDiv.querySelectorAll('br');
    var asd = mainDiv.innerHTML;
    asd = asd.replace(/\<br\/\>/g, "---break---");
    asd = asd.replace(/\<br\>/g, "---break---");
    asd = asd.replace(/<(?:.|\n)*?>/gm, '');
    var Ctextarray = asd.split('---break---');
    var Cnumbers = Ctextarray.length,
        CElement, CElement2, newDiv = document.createElement("div"),
        newDiv2 = document.createElement("div");
    newDiv.id = adfId;
    newDiv.className = 'intext_adf';
    newDiv2.id = adfId2, newDiv2.className = 'intext_adf';
    if (isInPage) {
        var inDiv = document.createElement("div");
        inDiv.id = inpageparams.renderTo;
        inDiv.className = 'inpage_adf';
    }
    if (Cnumbers > 2) {
        var textCont = Ctextarray[number - 1];
        if (textCont.length >= MinSymbols) {
            CElement = ConElements[number + 1];
            CElement.parentNode.insertBefore(newDiv, CElement);
            adCrt(isScroll, noCredit, ownerid, adfId, params);
            if (isInPage) {
                if (ConElements[number + 3]) {
                    inDivEl = ConElements[number + 3];
                    inDivEl.parentNode.insertBefore(inDiv, inDivEl)
                } else {
                    ConElements[0].parentNode.appendChild(inDiv)
                }
                addInpage(inpageparams, noCredit);
            }
            var textc2 = 0;
            for (i = 1; i < Cnumbers; i++) {
                textc2 += Ctextarray[i].length;
                if (textc2 > MinSymbols2) {
                    if (i + 1 < Cnumbers) {
                        CElement2 = ConElements[i + 1];
                        CElement2.parentNode.insertBefore(newDiv2, CElement2);
                    } else {
                        ConElements[0].parentNode.appendChild(newDiv2);
                    }
                    adCrt(isScroll, noCredit, ownerid, adfId2, params2);
                    break;
                }
            }
        } else if (Cnumbers > 3) {
            CElement = ConElements[number + 2];
            CElement.parentNode.insertBefore(newDiv, CElement);
            adCrt(isScroll, noCredit, ownerid, adfId, params);

            if (isInPage) {
                if (ConElements[number + 4]) {
                    inDivEl = ConElements[number + 4];
                    inDivEl.parentNode.insertBefore(inDiv, inDivEl)
                } else {
                    ConElements[0].parentNode.appendChild(inDiv)
                }
                addInpage(inpageparams, noCredit);
            }
            var textc2 = 0;

            for (i = 2; i < Cnumbers; i++) {
                textc2 += Ctextarray[i].length;
                if (textc2 > MinSymbols2) {
                    if (i + 1 < Cnumbers) {
                        CElement2 = ConElements[i + 1];
                        CElement2.parentNode.insertBefore(newDiv2, CElement2);
                    } else {
                        ConElements[0].parentNode.appendChild(newDiv2);
                    }
                    adCrt(isScroll, noCredit, ownerid, adfId2, params2);
                    break;
                }
            }

        } else {
            ConElements[0].parentNode.appendChild(newDiv);
            adCrt(isScroll, noCredit, ownerid, adfId, params);
        }
    } else if (Cnumbers > 1) {
        CElement = ConElements[Cnumbers - 1];
        CElement.parentNode.insertBefore(newDiv, CElement);
        adCrt(isScroll, noCredit, ownerid, adfId, params);
    } else if (Cnumbers == 1 && Ctextarray[0].length >= MinSymbols) {
        ConElements[0].parentNode.appendChild(newDiv);
        adCrt(isScroll, noCredit, ownerid, adfId, params);
    }
}




/*Step 4 */
function callImplementCode(actual_JSON) {
    try {

        if (actual_JSON.stopwords) {

            var wordlist = actual_JSON.stopwords,
                xfound = 0;

            for (i = 0; i < wordlist.length; i++) {
                var nodex = document.querySelectorAll(actual_JSON.container)[0].parentNode;
                var nodexx = nodex.innerHTML;
                var x = nodexx.search(wordlist[i]);
                if (x >= 0) {
                    xfound = 1;
                    console.log('blocklist word');
                    return 0;
                    break;
                }
            }
        }
        var divId1 = getRandomId(); //generate random div id for Native Scroll 1
        var divId2 = getRandomId(); //generate random div id for Native Scroll 2

        if (actual_JSON.isBr == true) {
            ImplementCodeBr(actual_JSON.isScroll, actual_JSON.noCredit, actual_JSON.ownerId, actual_JSON.params, actual_JSON.params2, actual_JSON.container, actual_JSON.number, divId1, divId2, actual_JSON.minSymbols, actual_JSON.minSymbols2, actual_JSON.inpage, actual_JSON.inpageparams, actual_JSON.interscroller);
        } else if (actual_JSON.isBr == 'both') {
            let number = ImplementCode(actual_JSON.isScroll, actual_JSON.noCredit, actual_JSON.ownerId, actual_JSON.params, actual_JSON.params2, actual_JSON.container, actual_JSON.number, divId1, divId2, actual_JSON.minSymbols, actual_JSON.minSymbols2, actual_JSON.inpage, actual_JSON.inpageparams, actual_JSON.interscroller);
            if (number < 1) {
                ImplementCodeBr(actual_JSON.isScroll, actual_JSON.noCredit, actual_JSON.ownerId, actual_JSON.params, actual_JSON.params2, actual_JSON.brContainer, actual_JSON.number, divId1, divId2, actual_JSON.minSymbols, actual_JSON.minSymbols2, actual_JSON.inpage, actual_JSON.inpageparams, actual_JSON.interscroller);
            }
        } else {
            ImplementCode(actual_JSON.isScroll, actual_JSON.noCredit, actual_JSON.ownerId, actual_JSON.params, actual_JSON.params2, actual_JSON.container, actual_JSON.number, divId1, divId2, actual_JSON.minSymbols, actual_JSON.minSymbols2, actual_JSON.inpage, actual_JSON.inpageparams, actual_JSON.interscroller);
        }
        if (actual_JSON.customstyle) {
            addCustomStyle(actual_JSON.customstyle);
        }
    } catch (e) {
        console.log(e);
        console.log('text content does not exist');
    }
}



function addVideoCode() {
    var s = document.createElement("script");
    s.type = "text/javascript";
    s.src = 'https://ads.prodigi.uz/videoads/client.js';
    s.id = "CaramelCode";
    document.body.appendChild(s);
}


/*Step 3 */
function callJson(tDomain) {

    if (document.getElementById('CaramelCode')) {
        document.body.removeChild(document.getElementById('CaramelCode'));
    }

    var s = document.createElement("script");
    s.type = "text/javascript";
    s.src = tDomain;
    s.id = "CaramelCode";
    document.body.appendChild(s);
}

/*Step 2 */

function initCods(domainName) {
    callJson('https://ads.nativenetwork.uz/json/' + domainName + '.js' + "?ts=" + new Date().getTime());
}



/*Step 1 */

if (document.domain) {
    var myDomain = document.domain.startsWith('www.') ? document.domain.slice(4) : document.domain;
    initCods(myDomain);
}
else {
    initCods('default')
}







function addStyleInpage() {
    var doc = document;
    var newScript = doc.createElement('style');
    var content = doc.createTextNode(`#native_ad{display: flex; justify-content: center;}`);
    newScript.appendChild(content);
    var bodyClass = doc.getElementsByTagName('head')[0];
    bodyClass.appendChild(newScript);
}
addStyleInpage();



function addStyleForScroll() {
    var doc = document;
    var newScript = doc.createElement('style');
    var content = doc.createTextNode('.nativeNetworkLogo{width: 155px; height: 20px; position: absolute; bottom: 0; right: 0; z-index: 9999} .logo_bottomline{width: 155px; height: 20px; right: 0px; bottom: 0; position: absolute; background-color: rgb(255 255 255 / 80%); display: flex; align-items: center; border-top-left-radius: 5px;border: 1px solid #00000012; border-right: 0px;border-bottom: 0; animation-name: caramel_bottomline} #bottomline_svg_text{ width: 125px; height: 18px;margin: 0 !important; opacity: 1 !important; position: absolute; right: 5px;animation-name: ozulfnfzxr_svg_text;} #bottomline_svg_logo{width: 15px !important; height: 15px !important; right: 135px; position: absolute; margin: 0 !important; opacity: 1 !important;} .bottomline_logo_animation{animation-duration: 3s; animation-iteration-count: 1; animation-timing-function: ease-in-out;} @keyframes caramel_bottomline{0%,66%{right: -155px} 100%{right:0px}} over { animation-name: rotate1; animation-duration: 1.5s; animation-iteration-count: infinite; animation-timing-function: linear; } @keyframes rotate1 { from {transform: rotate(0deg);} to {transform: rotate(360deg);} } .out { animation-name: rotate2; animation-duration: 1.5s; animation-iteration-count: 1; animation-timing-function: ease-out; } @keyframes rotate2 { from {transform: rotate(0deg);} to {transform: rotate(360deg);} }');
    newScript.appendChild(content);
    var bodyClass = doc.getElementsByTagName('head')[0];
    bodyClass.appendChild(newScript);
}

var checkerForScrollLogo = setInterval(function () {



    if (document.querySelector('#native_scroll')) {

        var scroll_add = document.querySelector('#native_scroll');

        scroll_add.style.overflow = "hidden";

        scroll_add.style.position = "relative";

        var crDiv = document.createElement("a");

        crDiv.className = 'nativeNetworkLogo';

        crDiv.href = 'https://nativenetwork.uz/';

        crDiv.target = '_blank';

        crDiv.innerHTML = '<div class="logo_bottomline bottomline_logo_animation" id="logo_bottomline"> <img src="https://ads.caramel.am/new_logo_svg/logo.svg" id="bottomline_svg_text" > <img src="https://ads.caramel.am/new_logo_svg/caramel.svg" id="bottomline_svg_logo" class="" > </div>';

        scroll_add.append(crDiv);

        addStyleForScroll();
        clearInterval(checkerForScrollLogo);
    }


}, 100);



if (window.location.href == "https://nativenetwork.uz/preview/native-in-page-mobile?lang=ru") {
    var doc = document;
    var newScript = doc.createElement('style');
    var content = doc.createTextNode(`.native_network_top{width: 226px !important;overflow: hidden;} .native_network_top img{width: 300px; height: 18px; position: absolute; right: 0;max-width: unset;}`);
    newScript.appendChild(content);
    var bodyClass = doc.getElementsByTagName('head')[0];
    bodyClass.appendChild(newScript);
}



styleCss = document.createElement('style');
head = document.head || document.getElementsByTagName('head')[0];
style = document.createElement('style');
head.appendChild(style);
var styleCss = '#native_ad_1{width: 100%; display: flex; justify-content: center; margin-bottom: 5px} #native_scroll, #native_video_1{ margin-bottom: 5px}'
style.type = 'text/css';
if (style.styleSheet) {
    style.styleSheet.cssText = styleCss;

} else {
    style.appendChild(document.createTextNode(styleCss));
}



















function addStyleForFullScreen() {
    var doc = document;
    var newScript = doc.createElement('style');
    var content = doc.createTextNode('.nativeNetworkLogoFullScreen{width: 157px; height: 22px; position: absolute; bottom: 5%; right: 5%; z-index: 9999 ; overflow: hidden} .logo_fullscreen{width: 155px; height: 20px; right: 0px; bottom: 0; position: absolute; background-color: rgb(255 255 255 / 80%); display: flex; align-items: center; border-top-left-radius: 5px;border: 1px solid #00000012; border-right: 0px;border-bottom: 0; animation-name: caramel_fullScreen} #fullScreen_svg_text{ width: 125px; height: 18px;margin: 0 !important; opacity: 1 !important; position: absolute; right: 5px;animation-name: ozulfnfzxr_svg_text;} #fullScreen_svg_logo{width: 15px !important; height: 15px !important; right: 135px; position: absolute; margin: 0 !important; opacity: 1 !important;} .fullscreen_logo_animation{animation-duration: 1.5s; animation-iteration-count: 1; animation-timing-function: ease-in-out;} @keyframes caramel_fullScreen{0%,33%{right: -157px} 100%{right:0px}} over { animation-name: rotate1; animation-duration: 1.5s; animation-iteration-count: infinite; animation-timing-function: linear; } @keyframes rotate1 { from {transform: rotate(0deg);} to {transform: rotate(360deg);} } .out { animation-name: rotate2; animation-duration: 1.5s; animation-iteration-count: 1; animation-timing-function: ease-out; } @keyframes rotate2 { from {transform: rotate(0deg);} to {transform: rotate(360deg);} }   .closeFullScreen {  display: flex; justify-content: flex-end; transition: 0.7s; opacity: 1; }  .closeFullScreenButton{position: absolute; top: 5%; right: 5%;width: 35px; height: 35px; margin-top: 15px; margin-right: 15px; z-index: 99; background-image: url(https://ads.nativenetwork.uz/banners_img/fullscreen/x-button.svg); background-size: contain; background-repeat: no-repeat; background-position: center; cursor: pointer;}  @media only screen and (max-width: 600px) {.closeFullScreenButton { position: absolute; top: 5%; right: 5%; width: 25px; height: 26px;}}');
    newScript.appendChild(content);
    var bodyClass = doc.getElementsByTagName('head')[0];
    bodyClass.appendChild(newScript);
}

let checkerForFullScreenLogo = setInterval(function () {



    if (document.querySelector('.native-network-fullscreen')) {

        let fullScreenAdd = document.querySelector('.native-network-fullscreen');

        fullScreenAdd.style.overflow = "hidden";

        fullScreenAdd.style.position = "relative";

        let crDiv = document.createElement("a");

        crDiv.className = 'nativeNetworkLogoFullScreen';

        crDiv.href = 'https://nativenetwork.uz/';

        crDiv.target = '_blank';

        crDiv.innerHTML = '<div class="logo_fullscreen fullscreen_logo_animation" id="logo_fullscreen"> <img src="https://ads.caramel.am/new_logo_svg/logo.svg" id="fullScreen_svg_text" > <img src="https://ads.caramel.am/new_logo_svg/caramel.svg" id="fullScreen_svg_logo" class="" > </div>';

        fullScreenAdd.append(crDiv);



        let closeFullScreenButton = document.createElement("div");

        closeFullScreenButton.className = 'closeFullScreenButton';

        var requestFullScreen = new XMLHttpRequest();

        requestFullScreen.onreadystatechange = function () {
            if (requestFullScreen.readyState === 4) {
                if (requestFullScreen.status === 200) {

                }
            }
        }

        requestFullScreen.open('GET', localStorage.getItem("fullscreenNN"));




        function closeButtonFullScreen() {
            requestFullScreen.send();
            fullScreenAdd.style.display = "none";
            fullScreenAdd.innerHTML = "";
        }




        closeFullScreenButton.addEventListener("click", closeButtonFullScreen)

        fullScreenAdd.append(closeFullScreenButton);


        addStyleForFullScreen();
        clearInterval(checkerForFullScreenLogo);
    }


}, 100);